Common/None,None
SelfLeaderboard/TitleText,Personal Best Records
SelfLeaderboard/ClearTimesText,-  Clear times:
StageIntroductionPanel/Title,Stage Introduction
StageIntroductionPanel/StageOverviewTitle,Stage Overview
StageIntroductionPanel/StageObjectivesTitle,Stage Objectives
ModeSelectionPanel/Title,Mode Selection
ModeSelectionPanel/TutorialModeButton,Tutorial Mode
ModeSelectionPanel/PracticeModeButton,Practice Mode
ModeSelectionPanel/BackToStageSelectionButton,Back to Stage Selection
ModeSelectionPanel/PlayThisStage,Play This Stage
TooltipMessage/TutorialModeDescription,"In Tutorial Mode,
the instructional text will guide you
to accomplish the main objectives in simulated scenarios."
TooltipMessage/PracticeModeDescription,"In Practice Mode,
you are required to achieve the main objectives in simulated scenarios independently.
(Note: You must clear the Tutorial Mode first.)"
StageIntroductionPanel/StageOverview/Game Introduction,"The 'Game Introduction' stage is your starting place in this Git tutorial game.
In this stage, you will be introduced to the basic gameplay and rules of the game. 
You will familiarize yourself with the game's basic operations and interface by using the 'file backup' method."
StageIntroductionPanel/StageObjective/Game Introduction,"1. Understand the game interface and operations with the stage process.
2. Familiarize yourself with the game environment and gameplay using the 'file backup' method."
StageIntroductionPanel/StageOverview/Version Control and Git,"In this stage, you will learn the basics of version control and Git. 
This stage will focus on:
The concept of version control, the role of Git, and the benefits they bring.

This stage does not include practical operations, 
but there is a quiz at the end to review the learning content."
StageIntroductionPanel/StageObjective/Version Control and Git,"1. Review the previous stage and point out the issues caused by 'file backup.'
2. Understand the basic concept of version control and its advantages.
3. Learn what Git is and the benefits of using it.
4. Deepen your understanding of version control and Git by taking a quiz."
StageIntroductionPanel/StageOverview/Create Local Repository,"In this stage, you will learn how to use the command line interface to create your first Git local repository.
Follow the text tutorial and practical actions, 
You can learn how to control the command line interface, execute Git commands, and understand the components of Git and its workflow."
StageIntroductionPanel/StageObjective/Create Local Repository,"1. Learn to open and use the command line interface.
2. Understand and execute the 'git --version' command to check the installation and version of Git.
3. Execute the 'git init' command to create a new Git repository in a specified directory.
4. Understand the role and composition of the '.git' folder."
StageIntroductionPanel/StageOverview/Basic Staging Area,"In this stage, you will learn the basic operations of the Git Staging Area. 
This stage will further get to know the structure of the Staging Area. 
And use Git commands to view the contents of the Staging Area and control the staging status of files."
StageIntroductionPanel/StageObjective/Basic Staging Area,"1. Understand the role and importance of the Staging Area in the Git workflow.
2. Learn to use the 'git status' command to view the status of the Staging Area.
3. Become familiar with using the 'git add' command to add files to the Staging Area.
4. Understand how to use the 'git reset' command to remove files from the Staging Area."
StageIntroductionPanel/StageOverview/Advanced Staging Area,"In this stage, you will learn advanced operations of the Git Staging Area. 
This stage will teach you how to add parameters before commands for more efficient management of the file staging status.
You will learn how to move files of a folder at once and move all files in the command line path."
StageIntroductionPanel/StageObjective/Advanced Staging Area,"1. Learn to add parameters to 'git add' and 'git reset' commands for more efficient operation of the Staging Area.
2. Understand the high flexibility of Git commands in the process."
StageIntroductionPanel/StageOverview/Creating First Version,"In this stage, you will learn the process of creating Git commits.
In previous stages, you have already learned how to add files to the staging area. 
This time, you will push these contents into the commit history and understand the contents of it."
StageIntroductionPanel/StageObjective/Creating First Version,"1. Use 'git add' and 'git reset' commands to add or remove files from the staging area.
2. Learn to use the 'git commit' command to commit changes.
3. Understand the importance of commit messages and learn how to write meaningful messages.
4. Use 'git status' and 'git log' to view the status of the staging area and commit history."
StageIntroductionPanel/StageOverview/Switching Project Versions,"In this stage, you will learn how to use the 'git checkout' command to switch different commit versions.
And learn how to check the commit history, and move HEAD to other commits. 
During the process, you will encounter situations while switching versions."
StageIntroductionPanel/StageObjective/Switching Project Versions,"1. Get familiar with the structure of commit history.
2. Learn to use 'git checkout commit_ID' to switch to different commits.
3. Understand the concept and impact of 'Detached HEAD'.
4. Learn how to use 'git checkout branch_name' to switch HEAD back to a specified branch."
StageIntroductionPanel/StageOverview/Git Branching Basics,
StageIntroductionPanel/StageObjective/Git Branching Basics,