做得好！\r\n當您執行了 'git init' 指令之後\r\n專案位置上多了一個新資料夾
執行該指令後\r\nGit 會在指定位置上創建一個名為 '.git' 的資料夾
這個資料夾在電腦系統中是 '隱藏' 的\r\n這意味著您不需要直接去修改它的內容\r\n令來與它進行互動
相反，您將使用各種 Git 指\r\n'.git' 是整個 Git 系統的核心\r\n它包含了與專案相關的重要信息\r\n例如提交的版本內容、作者、時間等
如果沒有 '.git' 資料夾\r\n大部分的 Git 指令是無法正常運作的
現在，讓我來簡單介紹一下組成 Git 的三個區域： 
首先是 '工作目錄' (Working Directory)\r\n這個區域實際上就是您選擇的專案位置
'工作目錄' 中的所有檔案都會被 Git 追蹤\r\n也就是 '開發中的專案' 這個資料夾
接著是 '暫存區域' (Staging Area)\r\n這個區域在 '工作目錄' 和 '.git' 資料夾之間\r\n擔任了橋樑的角色
您可以把檔案修改內容\r\n從 '工作目錄' 推送到 '暫存區域'
然後將確認好的檔案移動到 '儲存庫' 形成一個記錄
最後是 '儲存庫' (Repository)\r\n在本地電腦創建的管理系統\r\n稱為 '本地儲存庫' (Local Repository)
而實際上，'儲存庫' 指的就是 '.git' 資料夾
在接下來的關卡中\r\n我們將更詳細地介紹\r\n'暫存區域' 和 '本地儲存庫' 這兩個區域\r\n並使用 Git 指令來操作它們
經過本次的操作，\r\n您成功地達成了模擬場景的目標
通過新解鎖的 '命令行' 視窗\r\n執行 'git -v' 和 'git init' 指令\r\n來創建新的 Git 管理系統
我們也了解 '.git' 資料夾的作用和裡面的結構
在下一關卡\r\n我們將進一步瞭解 '暫存區域' 的內容\r\n並通過指令來操作它
最後，恭喜您順利完成本次教學關卡\r\n做得好！