恭喜您！
您順利地解決了這次模擬背景的題目！

相信透過本次的練習
您也記住了 "git add"、"git reset" 
這兩個指令的進階用法了！

在關卡的最後
讓我們回顧一下關卡中學到的知識與指令吧！

我們在本次關卡裡
加入了資料夾類型的檔案

而我們發現在 "暫存區域" 中
並不是所有檔案都會顯示在上面

這是因為
Git 系統會判斷一個檔案是否需要被追蹤

如果電腦中出現了空的資料夾
Git 系統會認為這些資料夾沒有追蹤的意義
故不會顯示在 "暫存區域" 裡

而如果電腦裡有著非資料夾類型的一般檔案
Git 系統在默認情況下就會追蹤這些檔案

接下來，我們在這次關卡中學會了四個新的指令
分別是：
1. "git add 資料夾名稱"
2. "git reset 資料夾名稱"
3. "git add ."
4. "git reset ."

這些指令都是以 "git add" 或 "git reset" 作為開頭
但是它們的作用都是不同的

這也是 Git 指令的一個特性 —— "高靈活度"
我們可以在指令的前方加入各種不同的文字
來實現指令額外的功能

在 "git add"、 "git reset" 加入 "資料夾名稱"
可以將資料夾中的全部檔案放入、移出 "暫存區域"

而在 "git add"、 "git reset" 加入 "." 符號
可以一次性的將
當前路徑下的所有檔案放入、移出 "暫存區域"

在完成了本次的關卡後
我們可以繼續往下一個目標前進了！

在和 "暫存區域" 相關的關卡中
我們已經成功地
將修改好的檔案移動到了 "已追蹤" 區域

現在，是時候將這些檔案
移動到 "存儲庫" (Repository) 中了！

在下一關卡
我們將會正式提交專案的第一個版本！
並且我們會認識 "存儲庫" 裡面的內容

最後，恭喜您完成本次的關卡！
您已經理解了
組成 Git 的三大區域之一 —— "暫存區域"
非常的厲害！

