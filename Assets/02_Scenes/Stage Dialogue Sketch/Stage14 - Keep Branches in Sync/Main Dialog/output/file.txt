歡迎來到
'保持分支同步' 關卡！

在這個關卡中
將學習如何同步遠端儲存庫的內容
並更新正在開發中的本地分支

首先，讓我們快速回顧上一關卡中學到的知識和指令

在上一關中
我們學習了 'git push 遠端儲存庫別名 本地分支名稱' 指令
讓本地分支的內容上傳至遠端儲存庫
遠端儲存庫會新建並更新對應分支的提交記錄

'git push -d 遠端儲存庫別名 本地分支名稱' 指令
則用來刪除遠端分支

在回顧完上一個關卡的內容後
讓我們來模擬本次的遊戲背景

在創建好了關卡場景後
會發現本次有兩個問題需要解決

首先，第一個背景故事
作者發現在目前使用的電腦中
專案版本落後於遠端儲存庫

請先開啟 '提交記錄' 視窗
我們來確認其中的狀態

好的，在 '提交記錄' 中
會發現遠端的 'update-readme' 分支多了一個提交
但是我們無法查看裡面的內容

在實際使用 Git 時
這些鎖起來的提交並不會顯示在執行結果中
我們需要更新本地分支才能夠查看

而 'git clone' 雖然可以複製遠端儲存庫到本地電腦中
但是它無法用於更新落後的分支

因此，本次要學習一個新的指令
'<color=#CF001C>git pull 遠端儲存庫別名 分支名稱</color>'
用來將本地分支更新至遠端分支的版本

這個指令會依序執行以下操作：
1. 從遠端儲存庫獲取最新的 '提交記錄'
2. 這些記錄將合併到對應的本地分支

第 2 點就和 'git merge' 相同
Git 會根據兩個分支的提交記錄
自動選擇合併模式

這個指令讓本地、遠端的分支保持同步
讓您能在最新版本上繼續開發功能

所以當您有一段時間沒有開發功能時
請通過這個指令更新分支內容
以減少錯誤的發生

接下來，請您先切換到 'update-readme' 分支
然後執行 '<color=#CF001C>git pull origin update-readme</color>' 指令
來更新 'update-readme' 分支內容 

非常好！
您執行了指令
'<color=#CF001C>git branch 本地分支名 遠端分支名</color>' 

查看 '提交記錄' 視窗，
會發現本地儲存庫獲得了對方的 'member-branch' 分支
並且與遠端分支有著相同的提交記錄

在得到團隊成員的分支後
我們可以直接在電腦上協助他解決問題
表示第二個問題解決了

相信解決這兩個問題後
您對如何同步、獲取遠端分支
已經有一些概念了

本次關卡中，
您通過 '<color=#CF001C>git pull 遠端儲存庫別名 分支名稱</color>'
將落後的本地分支更新到遠端分支最新的版本

'<color=#CF001C>git branch -r</color>'
來查看遠端儲存庫的所有分支名稱

以及通過 '<color=#CF001C>git branch 本地分支名 遠端分支名</color>'
來將遠端分支獲取到本地電腦上

在前半段 '遠端管理' 主題關卡中
您已經使用 'git push' 指令來推送與更新分支
通過 'git pull' 指令來保持分支同步

在後半部的關卡中
要學習如何將遠端分支的內容
合併到遠端 'master' 分支

在團隊共同開發專案時
合併到遠端 'master' 分支時可能會遇到一些挑戰

最後，恭喜您完成本次的關卡
您做得很棒！