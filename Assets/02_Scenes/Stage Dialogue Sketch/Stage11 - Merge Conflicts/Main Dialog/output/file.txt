歡迎來到
'解決合併衝突' 關卡！

在這個關卡中
將學習最後一種合併模式 —— 合併衝突（Merge Conflict）
以及如何解決衝突

首先，讓我們快速回顧上一關卡中學到的知識和指令

在上一關卡中
遇到了 '自動合併' 的情況

自動合併發生在
兩個分支的 '提交記錄' 分叉成兩條路徑時

然而，途中並未出現文件衝突
所以 Git 能夠自動合併分支的工作內容

而本次將會重點討論發生 '合併衝突' 的情況

在回顧完上一個關卡的內容後
讓我們先來模擬本次的遊戲背景

在創建好關卡場景後
請您查看 '提交記錄' 的狀態
來了解目前遊戲開發的進度

好的，在開啟 '提交記錄' 視窗後
讓我們來查看每個提交的狀態

這個專案裡有 3 個分支，分別是：
1. master（主分支）
2. add-score-feature（增加分數功能）
3. reset-score-feature（重置分數功能）

在 'master' 分支上
作者初始化了 '點擊按鈕遊戲'
將相關檔案放入儲存庫中

在 'add-score-feature' 分支上
作者在網頁上增加一個按鈕
並在程式檔案中完成了增加分數功能

在 'reset-score-feature' 分支上
作者同樣在網頁上增加了一個按鈕，
並在程式檔案中完成了重置分數功能

儘管這兩個分支都在網頁中增加了按鈕，
但由於它們都是基於 'master' 分支創建的

所以實際上，這兩個分支的網頁中
都只包含分支裡創建的一個按鈕

根據背景故事，
我們需要合併這兩個分支的開發內容至主分支，
以完成 '點擊按鈕遊戲'

首先，讓我們從 'add-score-feature' 分支開始
在合併前，先來預測 Git 將使用哪種合併模式

觀察 '提交記錄'，
會發現 'master' 和 'add-score-feature' 分支
'提交記錄' 是一條直線

由此可知，本次為 '快速合併'
'master' 分支的 '提交記錄' 將被更新

那麼，請您合併 'add-score-feature' 分支吧

很好！
'add-score-feature' 分支的內容已被合併至 'master' 分支

合併分支後，
'master' 分支現在擁有加分的按鈕和功能

接下來，來合併 'reset-score-feature' 分支
在合併前，我們一樣來預測 Git 將使用哪種合併模式

觀察 '提交記錄'
會發現 'master' 和 'reset-score-feature' 
分支之間的 '提交記錄' 分叉成兩個路徑

在這種情況下，Git 將使用自動合併
並檢查兩個分支的修改內容是否發生衝突

從提交中可以得知
'add-score-feature' 和 'reset-score-feature' 分支
都有修改相同的檔案

當同個檔案中存在兩種不同的修改時
Git 將提醒開發者文件發生衝突

需要注意的是
衝突不代表我們執行了錯誤操作
這在團隊開發時更為常見

由於 Git 無法自行判斷修改內容
哪些部分需要保留，哪些需要刪除
所以我們需要手動解決文件衝突

接下來，請先嘗試合併 'reset-score-feature' 分支
來觀察文件發生衝突後產生的影響

很好！
您嘗試合併 'reset-score-feature' 分支
但命令行返回了 '合併衝突' 訊息

查看 '提交記錄' 會發現合併並未成功執行

因為如果不解決文件衝突的話
將無法繼續合併分支

從命令行的訊息中
可以知道哪些檔案內容發生了衝突

接下來，來試著解決檔案衝突吧
我們先從 '遊戲程式.js' 開始

要解決衝突
需要先從 '工作目錄' 中找到對應的檔案

請您先開啟 '檔案管理' 視窗
查看 '遊戲程式.js' 內容

好的，開啟檔案後
會發現檔案裡新增了一些特殊符號
我們來了解檔案內容的變化

第一行的 '將初始分數設為 0'
'add-score-feature' 和 'reset-score-feature' 分支
都有這段程式碼

由於兩個分支的修改是相同的
所以這行沒有發生衝突

再來，由特殊符號 '<'、'='、'>' 包起來的內容
就是文件發生衝突的段落

其中，由 '<<< HEAD' 和 '===' 包起來的區域
表示當前分支的修改內容

我們位於 'master' 分支上的最新提交
所以區域中是 '增加分數功能' 程式碼

接下來，由 '===' 和 '>>> reset-score-feature' 包括起來的區域
表示在 'reset-score-feature' 分支的修改內容

從提交可以得知
在 'reset-score-feature' 分支上
新增 '重置分數功能' 程式碼

在了解檔案內容後
讓我們來解決文件衝突吧

根據故事背景
我們應該留下兩個分支的功能
遊戲才能順利遊玩

因此，您需要將文件中的分隔特殊符號 （'<<<'、'==='、'>>>'）
總計 3 行的內容刪除

這表示我們要同時保留 
兩個分支的修改內容

接下來，請您根據以上的指示
試著解決文件衝突吧

非常出色！
您已經解決檔案中的文件衝突

在解決衝突後
檔案裡包含了初始化分數的程式碼
以及兩個分支開發的功能

通過操作
您會發現 '解決合併衝突' 並沒有那麼複雜

當發生文件衝突時
團隊可能會一起討論如何處理衝突的文件
而合併衝突的難易程度通常取決於專案的複雜性

接下來，請您自行解決 '遊戲網頁.html' 的文件衝突吧
這次同樣需要保留兩個分支的修改內容
加油！

非常出色！
您成功解決 '遊戲網頁.html' 的文件衝突

您保留了兩個分支的修改內容
現在網頁中應該會有兩個按鈕

當解決所有衝突的檔案後
請為這些檔案新建一個提交
以表示合併衝突已經完成

提交後，Git 就會繼續合併分支
加油！

很好！
當您將解決衝突後的檔案推入 '暫存區域' 
並創建提交後

在 '提交記錄' 裡
'reset-score-feature' 分支已成功合併到 'master' 分支
表示 '解決合併衝突' 流程已完成

現在，網頁中有兩個功能按鈕
玩家可以點擊它們來加分和重置分數
表示本次的關卡目標完成了

在完成合併後
請記住要刪除掉兩個開發分支

在本次關卡中
您學會了如何去解決合併衝突
也表示您已經可以使用分支系統來管理專案了！

最後，恭喜您通過了本次關卡！
這也代表您完成了 '分支管理' 主題關卡
您做得很棒！