歡迎來到
'創建您的第一個遠端儲存庫' 關卡！

在 '遠端管理' 主題關卡中
我們將學習如何操作遠端儲存庫
並通過指令、視窗來達成模擬場景的目標

在開始之前
首先，讓我們來了解使用遠端儲存庫
對專案管理帶來的優點

對於簡單的小型專案來說
在本地電腦上開發功能已經足夠

然而，使用遠端儲存庫
可以將內容上傳到遠端來備份專案

當您的本地儲存庫因意外無法使用時
遠端儲存庫能夠幫助您恢復開發進度

此外，將專案上傳到網路上就表示
您可以在其他電腦上進行開發

而遠端儲存庫最大的優勢之一
就是支持團隊共同開發專案

團隊成員能夠在自己的電腦上
獲取專案儲存庫

在本地電腦上完成開發後
再將其上傳到遠端
這種流程提升了專案開發的效率

在了解遠端儲存庫的優點後
接下來，我們將進入本次的關卡

本次要來學習如何創建一個遠端儲存庫
並將其複製到本地設備中

建構好模擬環境後
請先打開 '檔案管理' 視窗吧

好的，查看 '檔案管理' 視窗後
會注意到電腦中還未創建本地儲存庫

這次需要通過網路瀏覽器
在 GitHub 等 Git 服務平台上創建遠端儲存庫

由於這些平台會隨著時間更新
因此本遊戲只有模擬最基本的流程

如果您需要在其他平台上創建遠端儲存庫
請參考網站中的教學

現在解鎖了 '瀏覽器' 視窗
請您點擊按鈕來開啟網頁瀏覽器

在開啟的瀏覽器視窗中
顯示的是模擬的 Git 服務平台首頁

一般情況下，如果要使用平台服務
需要先註冊網站的會員
而您已經註冊並登入了此網站

接下來，請點擊 '新增' 按鈕
來進入創建遠端儲存庫頁面

好的，現在我們進入了創建遠端儲存庫的頁面

首先，要先為新的儲存庫命名

儲存庫的名稱只能使用英文字母
不能包含特殊符號、空格和中文字

本次將儲存庫命名為：
'test-remote-repo'（測試遠端儲存庫）

下面的選項中
Git 服務平台會提供設定
給使用者自定義儲存庫內容

例如，在存取設定中
可以將儲存庫設為 '公開' 或 '私人'

'公開' 表示所有人都可以查看和訪問您的儲存庫

'私人' 表示只有您和其他經過授權的開發者
才能更改和查看儲存庫的內容

本次選擇了 '私人' ，希望保持專案的隱私

下方的 '初始化儲存庫' 選項中
會發現 '增加 README 檔案' 的選項

'README' 就像是電腦中的記事本、文字檔案
它用於說明專案的用途或如何操作專案

通常情況下，建議您勾選這個選項
它能夠協助您快速創建儲存庫

完成設置後
請點擊 '創建儲存庫' 按鈕
來創建您的第一個遠端儲存庫吧

非常好！
您創建了一個遠端儲存庫
並進入儲存庫的首頁

儲存庫裡，
'README' 的內容顯示在下方
而第一個遠端分支 'master' (或者是 'main') 已經創建

接下來，我們來學習如何將遠端儲存庫複製到本地電腦中
這個指令是：
'<color=#CF001C>git clone 遠端儲存庫網址</color>

請開啟 '命令行' 視窗
並按照下方步驟來複製儲存庫：

第 1 步：
首先，點擊首頁上的綠色 'Code' 按鈕
彈出的視窗中，顯示著這個儲存庫的網址
請點擊 '複製' 按鈕來複製網址

第 2 步：
在複製遠端儲存庫前
請先確定要複製到 '工作目錄' 中的哪個位置
這次需要在 'Home' 底下創建

第 3 步：
輸入指令 'git clone'
並在前方加一個空格
變成 '<color=#CF001C>git clone </color>'

第 4 步：
當輸入欄為選取狀態時
對著它 '點擊滑鼠右鍵'
將複製的網址文字貼到輸入欄中

現在，輸入內容會是：
'<color=#CF001C>git clone 遠端儲存庫網址</color>'

請您按照以上步驟
將遠端儲存庫複製到本地電腦上吧

非常好！
執行複製遠端儲存庫指令後
命令行返回了成功訊息

開啟 '檔案管理' 視窗
發現電腦裡新增了 'test-remote-repo' 資料夾

進入該資料夾後
其中包含了 '.git' 和 'README' 檔案
表示遠端儲存庫的內容已成功複製電腦上了

不過，讓我們來學習新的指令
'<color=#CF001C>git remote -v</color>' 

如果想要確認當前專案是否連接到想要的遠端儲存庫時
請執行這個指令

那麼，請使用 '<color=#CF001C>git remote -v</color>' 指令
來驗證此專案已正確連接

做得好！
您執行指令 '<color=#CF001C>git remote -v</color>'
命令行返回了訊息

首先，'origin' 是我們連接的遠端儲存庫別名
別名後方的是連接的遠端儲存庫網址

當執行 'git clone' 指令時
Git 會將被複製的遠端儲存庫預設命名為 'origin'

之後在與遠端儲存庫互動時
有時需要加入儲存庫的別名或網址
來確認執行指令的對象

在實際情況中
您能為專案連接、移除多個遠端儲存庫
並給予它們不同的別名

然而，很多時候您只需要連接一個遠端儲存庫
並維持 'origin' 的別名
就可以開發專案

因此，您只需要了解如何使用 'git remote -v' 指令
以確保連接到目標遠端儲存庫即可

我們成功地創建遠端儲存庫並複製到本地設備上
表示本次的關卡目標已經完成

在下一關卡，我們要正式學習
如何與遠端儲存庫進行互動

最後，恭喜您完成本次的關卡
您做得很棒！