

很好！在執行了<color=red> git init </color>指令後
是否有發現在檔案管理視窗中增加了一個新的資料夾？

這個指令告訴 Git
在指定的位置中建立<color=red> .git </color>的資料夾


接下來，我們要來了解關於<color=red> .git </color>資料夾的作用
以及組成 Git 的四個重要區域

首先，這個 Git 的系統分成了四個區域
工作區（Working Tree）、暫存區（Staging Area）、本地倉庫（Local Repository）
還有遠端倉庫（Remote Repository）

在前半段的關卡裡會先跳過遠端倉庫的部分
讓我們先來了解其他三個區塊的功能吧

首先是工作區（Working Tree）
它所代表的就是現在我們處理檔案的這個資料夾目錄

例如現在在檔案管理視窗中的報告講稿就是工作區裡面的文件
圖片資料夾裡的所有檔案也屬於工作區

但是要注意的是工作區的範圍只有在輸入指定的這個位置內
所以在執行<color=red> git init </color>指令前要先確定
哪一個位置才是我們想要建立的工作區

再來要介紹的是暫存區（Staging Area）
他的用途是將已經修改好的檔案放入到本地倉庫（Local Repository）裡

例如我們已經修改了報告草稿的內容
這時就可以利用指令將這些文件上傳到暫存區

最後是本地倉庫（Local Repository）
它可以記錄每個檔案修改的內容
也是管理檔案不同版本的重要區塊

本地倉庫的意思是
這個倉庫是建立在當前的電腦的
所以不需要連到網路上也可以進行專案管理

暫存區（Staging Area）和本地倉庫（Local Repository）這兩個區塊
都存儲在這個 .git 的隱藏資料夾中
我們會藉著 Git 指令來操作這兩個區塊

有了這三個區塊
就可以管理檔案之間版本上的不同了

在下一關卡中會介紹這三個區塊管理版本的流程
並且嘗試透過 Git 來實現上一關卡的情景

接下來，我們再來練習使用<color=red> git init </color>指令來創建新的倉庫
這次請注意在當前目標指定的位置建立倉庫

（已更新檔案管理內容）