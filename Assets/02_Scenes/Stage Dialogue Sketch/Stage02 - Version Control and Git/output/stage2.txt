歡迎來到
'版本控制與 Git 的介紹' 關卡！

本次關卡將專注於概念的解釋而不包含實際操作

然而，在觀看完關卡中的對話後
為了確保您對本關卡的理解
關卡最後將進行一次小測驗

如果您回答正確，您可以獲得 1000 分
如果回答錯誤，則不會獲得分數

本次內容將分為四個章節：
1. 回顧第 1 關卡
2. 什麼是版本控制
3. 什麼是 Git
4. 總結

在每一章節結束後
您可以選擇是否繼續下一章節
以便更好地吸收所學知識

在對話結束後
如果您想繼續下一章節
請點擊 '協助功能' 按鈕繼續學習

================

第 1 章 - 回顧第 1 關卡

在介紹版本控制和 Git 之前
讓我們先來回顧第 1 關卡

在第 1 關卡中
我們使用 '備份檔案' 的方法來完成期中簡報

儘管這是一種直接且快速的方法
但是這種方式在處理更為複雜的簡報或專案時會造成問題

第一，由於您在開發過程中備份了大量的檔案
導致難以去追蹤版本之間的差異

萬一在過程中遇到了嚴重的錯誤
需要回到過去的版本以進行修復
上述問題可能會嚴重影響開發進度

第二，您的工作環境會因為備份多個檔案而變得雜亂

甚至，您可能還會遇到以下情況：
1. 不小心在舊版本的文件中進行專案開發
2. 備份檔案時覆蓋了目前正在開發的檔案

為了避免這些問題的發生
我們可以使用版本控制系統來協助管理我們的專案

接下來，讓我們繼續進入第 2 章 - 什麼是版本控制
請問您需要休息一下嗎？

=====================================

第 2 章 - 什麼是版本控制

首先，讓我們來了解什麼是版本控制吧

版本控制在程式開發領域中有著非常重要的地位
但它不僅僅適用於程式相關的專案

實際上，只要是需要長期運營和開發的專案
都可以透過版本控制來有效管理

舉例來說，美術設計師或網頁設計師
在進行圖片編輯時可能會多次修改圖片

這時使用版本控制來管理圖片是非常合適的

版本控制的主要目標是為了更好地管理檔案的變化
它會記錄開發過程中的每一次修改

而以下是版本控制的好處：

1. 歷史追蹤： 
版本控制允許您查看檔案的每一次變化
包括誰進行了修改、何時進行了修改以及具體的修改內容

1. 回溯功能： 
如果您遇到錯誤、需要回到以前的版本時
版本控制可以讓您輕鬆地返回先前的狀態
不會影響到正在開發的內容

1. 分支管理： 
版本控制允許您創建分支來進行開發
這使得不同功能的開發可以同時進行
而不會互相干擾

以上版本控制的優勢
在後面的關卡中會更進一步地了解並進行實際操作

接下來，讓我們繼續進入第 3 章 - 什麼是 Git
請問您需要休息一下嗎？

=====

第 3 章 - 什麼是 Git

在知道什麼是版本控制後
讓我們來了解什麼是 Git

Git 是一個非常強大的版本控制工具
它在軟體開發領域非常受歡迎

製作 Git 的開發人員將版本控制的概念引入其中

使用者需要通過命令行（Command Line）
輸入 Git 指令來操作版本控制的相關功能

接下來，我將告訴您使用 Git 帶來的一些優勢：

1. 團隊協作：
Git 允許團隊成員同時進行專案開發
而彼此的工作不會互相干擾
同時，它也能夠輕鬆地將各成員的檔案合併在一起

1. 分支策略： 
Git 的分支管理功能使專案的發展過程更加流暢
您可以創建不同的分支，每個分支將專注於不同的目標

當開發分支的內容確認完成後
將該分支合併到主要分支
按照上述流程來提高專案的穩定性

1. 版本追蹤：
每次的檔案提交都會被記錄並儲存在 Git 中
這意味著您可以方便地查看每一次提交的內容

1. 容易學習： 
即使您不是程式開發人員，或者從未接觸過程式
Git 的概念其實是相對簡單的
只需要透過簡單的命令，就可以操作此系統

而在本遊戲中，會對 Git 指令做調整
我們將專注學習實用的指令
並移除相對困難、不實用的指令

接下來，讓我們繼續進入第 4 章 - 總結
請問您需要休息一下嗎？

==================

第 4 章 - 總結

總結來說
版本控制大幅提升了專案的開發效率
並能更有秩序的管理內容

歷史記錄和版本追蹤功能
能夠清楚地查看版本之間的差異

回溯功能可以輕鬆地返回先前的歷史狀態
便於查看歷史內容、修復問題

分支系統使專案的開發變得更加穩定
同時提升開發效率

最後，版本控制支持團隊協作
團隊成員能夠共同開發功能
並將完成的內容整合到專案中

=======

在了解什麼是版本控制與 Git 之後
最後將進行一個小測驗
 
在測驗中，無論您的回答是否正確
題目中的問題和選項
都將有助於您複習剛才學到的知識

現在，讓我們來模擬一個背景故事
您扮演了一名 '專案管理' 課程中的學生
需要運用剛學到的知識來回答測驗題目

在開始作答之前
您可以透過 '協助功能' 和 '遊戲手冊' 再次複習內容

問答系統已經新增到這台電腦中了
當您準備好要作答時，點選問答系統即可開始
請加油！

========

恭喜您完成回顧測驗
做的很好！

通過這次測驗
您複習了本關卡介紹的知識

最後，讓我們總結一下關卡中學到的知識：

首先，我們介紹了版本控制和 Git 的基本概念
並探討它們提供的優勢

接著，我們對比了 '版本控制'、'備份檔案' 這兩種方式
從結果中，'版本控制' 有著更多的好處

版本控制的實際應用中
我們不僅可以追蹤文件的變化
和了解不同版本之間的差異

還可以促進團隊協作、減少開發錯誤
以及更輕鬆地回溯歷史記錄等功能

接下來，我們將進入下一關卡
開始來學習如何實際使用 Git

在之後的關卡中，將探索各種 Git 指令
並通過實際輸入指令的方式來進行操作
這將有助於您更好地掌握 Git 技能

最後，恭喜您通過了本次的關卡
您做得很棒！