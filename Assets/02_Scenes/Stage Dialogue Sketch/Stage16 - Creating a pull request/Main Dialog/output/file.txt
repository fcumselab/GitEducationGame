歡迎來到
'創建 Pull Request' 關卡！

在這個關卡中，我們將學習以下內容：
1. 什麼是 Pull Request
2. 創建合併請求

本次將扮演創建 Pull Request 的角色
等待其他開發者審核我們的合併請求

在開始之前
讓我們先回顧上一個關卡學到的內容

在上一個關卡中，
我們完成了 '合併到遠端主分支' 前
需要先確認的流程

這個流程
可以避免在創建 Pull Request 時
會造成文件衝突，提高合併效率

同時可以確認
'主分支' 和 '開發分支' 合併後
專案是否可以正常運作

回顧完上一個關卡的內容後
接下來，讓我們來模擬本次的遊戲背景
並學習如何創建 Pull Request

在創建好關卡場景後
請您先開啟 '提交記錄' 視窗
來確認完成 '合併前的確認' 流程後的記錄

好的，開啟 '提交記錄' 視窗後
讓我們來檢查其中的狀態

目前本地與遠端儲存庫的 '提交記錄' 是同步的

此外，本地 'master' 分支
已經合併到 'update-readme' 分支中

點擊 'update-readme' 分支上的最新提交可以看到
作者解決了合併衝突

這個記錄就和上一關的結尾相同
作者完成了 '合併前的確認'
並準備創建 Pull Request

首先，讓我們先了解什麼是 Pull Request

Pull Request 是一個合併請求
它是 Git 服務平台中提供的功能

Pull Request 和 'git merge' 指令有相似的作用
'git merge' 用於合併兩個本地分支
Pull Request 則用於合併兩個遠端分支

使用 'git merge' 指令
只需要根據 Git 的合併模式
做出對應的操作即可

而 Pull Request 合併請求
需要請其他團隊成員查看並審核請求內容
最後決定是否要合併分支

這個方式能讓團隊參與討論
並保證專案的品質和安全性

理解什麼是 Pull Request 後
讓我們開始創建請求吧

請開啟 '瀏覽器' 視窗
我們要從 Git 服務平台中創建 Pull Request

在進入 Git 服務平台後
我們要先學習如何創建一個 Pull Request

首先，請在首頁上方的分頁中選擇 'Pull Requests'

選擇該分頁後，
畫面將顯示所有追蹤中的請求
不過目前這個專案還沒有創建任何 Pull Request

請點擊 '創建 Pull Request' 按鈕
來新建合併請求

點擊按鈕後
需要先選擇要合併的兩個目標分支

請注意：
base（基底）表示要被合併的分支
compare（比較）會把修改內容合併到 base 上

因此，要合併到遠端主分支的話
請將 base 設為 'master'
compare 設為 'update-readme'

設定完成後
系統將比較兩個分支的提交記錄
並告訴使用者是否需要進行合併

就和 'git merge' 相同
當兩個分支的內容有衝突
會提醒使用者出現合併衝突

選擇正確的兩個目標分支後
請點擊 '新建 Pull Request' 按鈕
Git 會要求您輸入合併請求訊息

在填寫訊息時
請填入與開發分支有關的內容
讓團隊知道創建這個請求的目的

完成訊息後
請按下 '新建 Pull Request' 按鈕
來創建合併請求

非常好！
您成功新建 Pull Request 合併請求
網頁跳轉到 Pull Request 的詳細頁面

作為合併請求的創建者
我們會經常使用討論區域

在合併請求的過程中，
團隊成員將在這裡討論和提供建議

在區域最下方的是合併狀態區域
可以從這裡得知目前合併請求的進度

我們需要根據下方的指示操作
直到所有問題被解決後才可以進行合併

目前顯示的合併狀態為 '請求需要審核'
表示我們需要團隊成員審核本次請求

為了完成合併狀態的需要
請在 '審核人員' 區域中加入團隊成員
他們將作為這次的審核人員

很好！
您為合併請求新增了審核人員
他們會在平台中收到需要審核的提醒

經過一段時間後
審核人員查看並回覆了合併請求

請點擊重新整理按鈕
來查看更新後的 Pull Request 頁面

更新頁面後
發現討論區域多了一個訊息
這是審核人員提出的修改建議

合併狀態區域更新了內容：'未解決的對話'
並列出需要修改的對話列表
表示您需要先解決團隊成員 A 的修改建議

根據修改建議
我們需要為 'README.md' 新增內容

在開啟新增之前
請您先回覆這項修改建議

在與團隊共同開發專案時
主動回覆和討論是常見且重要的

這些動作有助於確保專案的品質
減少誤解，並提高整體效率

要回覆對方
請在修改建議對話框下方的回覆區域進行操作

回覆完訊息後
請再為 'README.md' 新增內容
並將內容上傳至遠端

非常出色！
您在 'README.md' 上新增了缺少的內容
並將新的提交上傳至遠端

更新遠端 'update-readme' 分支後
Pull Request 頁面也隨之更新了

點選 '新增提交' 分頁
可以查看 'update-readme' 分支的 '提交記錄'

在您解決完修改建議的需求後
請再次回覆對方
來提醒我們已經完成修改，並要求他們再審核一次

回覆訊息後
請點擊 '標記為已解決'（Resolved Conversation） 按鈕

這是一種標記功能
用於表示審核人員提出的建議已被處理

點擊按鈕後，就可以解決
合併狀態區域的 '未解決的對話' 問題

=

很好！
您回覆對方需要再次審核修改後的內容
並點擊了對話解決按鈕

查看 '討論區域' 
發現修改建議的對話框已被折疊
表示該對話已被解決

並且在 '合併狀態' 區域中的
'未解決的對話' 變成了 '對話已解決'

經過一段時間後
審核人員再次查看了修改內容
並批准本次請求

請再次點擊重新整理按鈕
來查看目前請求的狀況

重新整理後
會發現我們回到了 Pull Request 列表中
Opened 分頁已經沒有我們創建的請求

它被移動到 Closed 分頁
表示請求已完成合併
請點擊這個請求來進入詳細頁面

在頁面中，會發現標題旁的標籤變為 'Merged'（已合併）
並且在討論區域下方的合併狀態不見了

在團隊成員 A 合併請求後
遠端 'master' 分支應該已經獲得
遠端 'update-readme' 分支的修改內容了

那麼，為了確認以上敘述為正確的
請您將遠端 'master' 分支的內容獲取到本地電腦裡

好的，在更新本地 'master' 分支後
發現 'master' 分支
得到了 'update-readme' 分支的 '提交記錄'

並且 'master' 分支上多了一個提交
用於顯示您創建的 Pull Request 
已被合併至 'master' 分支中

最後，當 'update-readme' 分支已經完成合併後
就可以將本地和遠端的 'update-readme' 分支刪除

請您將分支刪除後
再更新 '提交記錄' 視窗吧

非常好！
在刪除已完成目標的分支後
您完成了本次關卡的目標

通過本次的教學
您學會如何創建一個 Pull Request 合併請求
並解決途中遇到的問題

過程中，審核人員給予了修改建議
作為請求的創建者，需要按照修改建議來更動內容
並且要去回覆對方的訊息

在下一關卡中
我們將扮演 '審核人員' 的角色
學習如何去審核、批准別人的合併請求

最後，恭喜您完成了本次的關卡
做得非常好！
