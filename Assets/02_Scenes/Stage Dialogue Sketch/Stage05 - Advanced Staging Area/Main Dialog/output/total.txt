歡迎來到
'Git 暫存區域的進階操作' 關卡！

首先，讓我們快速回顧上一關卡中學到的知識和指令

在上一關卡中
我們詳細介紹了 '暫存區域' 的功能

並通過 'git status'、'git add'、'git reset' 
這三個指令來與 '暫存區域' 互動

'git status' 指令開啟了 '暫存區域' 視窗
並了解了該區域的結構和內容

通過 'git add' 和 'git reset' 指令
來將指定檔案移入或移出 '暫存區域'

在本次關卡中
我們將學習更進階的指令來操作 '暫存區域'

接下來，讓我們先來模擬本次的遊戲背景

在完成模擬後
請您先打開 '檔案管理' 視窗吧
我們來確認電腦中的檔案

好的，在開啟 '檔案管理' 視窗後

您可以看到電腦中的檔案數量比前一關卡還要多
這次增加了資料夾類型的檔案

根據背景故事
請您先確定目前 '暫存區域' 的狀態

好的，您已開啟 '暫存區域' 視窗
現在，讓我們來觀察視窗中的內容

您或許已經注意到
在 '未追蹤' 區域中
只有 '資料夾B/' 和 '文件C.txt' 這兩個列表

接下來，讓我們來了解
Git 是如何判斷檔案是否要被追蹤的

首先，從 '資料夾A' 開始
資料夾中沒有任何檔案

Git 主要目的是追蹤和管理檔案
所以 Git 不需要追蹤它

接下來是 '資料夾B'
資料夾裡面包含其他未追蹤的檔案

當 '資料夾B' 裡面沒有任何被追蹤的檔案時
就會簡單顯示為 '資料夾B/'

最後，'文件C.txt' 檔案
在 Git 默認規則下
所有 '<color=#CF001C>非資料夾類型</color>' 的檔案都會被追蹤

在了解 Git 追蹤檔案的規則後
讓我們開始進入學習指令的部分吧

我們在前一關卡學習的 'git add'、'git reset' 指令
它們除了可以在前方加入 '<color=#CF001C>指定檔案名稱</color>' 外
還可以加入 '<color=#CF001C>資料夾名稱</color>'

這是 Git 指令的高靈活性
大部分的指令都可以加入其他參數
來實現不同的功能

而為了讓您可以有效地學習指令
本遊戲對指令進行了重點擷取
您只需要專注學習關卡中提到的指令即可

好的，讓我們回到主題
這次請您使用 '<color=#CF001C>git add 資料夾名稱</color>' 來執行操作

請您對著 '資料夾B' 執行指令吧
並記得通過 'git status' 
再次確認 '暫存區域' 更新後的情況

很好！
您執行了 'git add' 指令中的
另一個功能 '<color=#CF001C>git add 資料夾名稱</color>'

查看 '暫存區域' 視窗
能夠注意到 '資料夾B' 中的所有檔案已加入至 '已追蹤'

雖然您也可以使用 'git add 指定的檔案名稱' 
來將資料夾中的檔案一一加入至 '已追蹤'

但是只要掌握這個指令
您就能更便利地操作系統

那麼，這次讓我們把 '資料夾B' 中的檔案
全部移動回 '未追蹤' 吧

在 'git reset' 前方加入 '資料夾名稱'
組成 '<color=#CF001C>git reset 資料夾名稱</color>'
就可以一次性移動資料夾中的檔案至 '未追蹤'

如果忘記 'git reset' 指令的作用
請查閱遊戲手冊來複習

非常好！
您使用指令 'git reset 資料夾名稱'
將 '資料夾B' 的所有檔案移動回 '未追蹤'

不過，既然可以在指令前方加入 
'指定的檔案名稱' 和 '資料夾名稱'

那麼，有沒有辦法一次性將
所有的檔案都放入 '暫存區域' 中呢？

答案是有的！

在 'git add' 指令前方中加入 '.' 符號
來讓 '命令行' 當前路徑下的檔案
全部放入 '已追蹤'

不過要注意的是
使用 'git add .' 指令
可能會把不想要上傳的檔案也移動到 '暫存區域' 

所以，在使用了這個指令後
需要多加注意 '暫存區域' 的狀況

那麼，請試著輸入指令
'<color=#CF001C>git add .</color>'
並確認專案的所有檔案都加入至 '已追蹤'

很好！
您使用了 'git add .' 指令
將專案中的所有檔案推入到了 '暫存區域' 

接下來，按照前面的流程
這次來將所有檔案移出 '暫存區域' 吧
這也是本次關卡中學到的最後一個指令

這次，請在 'git reset' 指令前面增加 '.' 符號
執行指令 '<color=#CF001C>git reset .</color>' 來達成目標吧
加油！

非常出色！
您成功執行了指令 'git reset .'
並將專案中的所有檔案移動回 '未追蹤'

按照以上的教學
相信您已經掌握了指令的進階用法

您在本次關卡中學會了指令的進階用法，分別是：
1. "git add 資料夾名稱"
2. "git reset 資料夾名稱"
3. "git add ."
4. "git reset ."

這些指令可以一次性地加入、移出檔案
來有效的控制 '暫存區域' 的狀態 

在完成本次的關卡後
我們可以繼續往下一個目標前進了

在本次關卡中，我們已經成功地
將修改好的檔案內容加入至 '已追蹤'

現在，是時候將修改移動到 '儲存庫' (Repository) 中了

在下一關卡
我們將會正式提交專案的第一個版本
並且認識 '儲存庫' 裡面的結構

最後，恭喜您完成本次的關卡
您做的很好！