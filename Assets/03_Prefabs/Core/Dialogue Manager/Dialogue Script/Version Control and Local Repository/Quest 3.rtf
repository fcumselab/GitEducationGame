很好！您成功的執行了一個功能
透過 <color=red>git --version</color> 或者是 <color=red>git -v</color>指令
就可以看到目前電腦所使用的 Git 版本

並且如果這個指令執行成功的話就代表
當前電腦中是有 Git 系統存在的
如果沒有的話需要到 Git 的網頁去下載

那麼，這次我們在來運行一個新的指令
在需要管理的資料夾位置中建立一個Git的管理系統
這次來試試看輸入“git init”來執行指令！

（關閉按鈕）

很好！在執行了指令後
是否有發現在檔案管理視窗中增加了一個新的資料夾？

這是在輸入了”git init”指令後所產生的結果
這個指令告訴 Git 我們需要在當前位置中建立這個叫做 “.git” 的資料夾

接下來，我們要來了解關於 .git 資料夾的作用
以及組成Git的四個重要的區域

首先，這個Git的系統分成了四個區域
工作區（Working Tree）、暫存區（Staging Area）、本地倉庫（Local Repository）
還有遠端倉庫（Remote Repository）

在前半段的關卡裡會先跳過遠端倉庫的部分
讓我們先來了解其他三個區塊的功能吧

首先是工作區（Working Tree）
它所代表的就是現在我們處理檔案的這個資料夾目錄

例如現在在檔案管理視窗中的報告講稿就是工作區裡面的文件
圖片資料夾裡的所有檔案也屬於工作區

但是要注意的是工作區的範圍只有在輸入指定的這個位置內
所以在執行“git init”指令前要先確定哪一個位置才是我們想要建立的工作區

再來要介紹的是暫存區（Staging Area）
他的用途是將已經修改好的檔案放入到本地倉庫（Local Repository）裡

例如我們已經修改了報告草稿的內容
這時就可以利用指令將這個文件上傳到暫存區

最後是本地倉庫（Local Repository）
它可以記錄每個檔案修改的內容
也是管理檔案不同版本的重要區塊

本地倉庫的意思是
這個倉庫是建立在當前的電腦的
所以不需要連到網路上也可以進行專案管理

暫存區（Staging Area）和本地倉庫（Local Repository）這兩個區塊
都存儲在這個 .git 的隱藏資料夾中
我們會藉著Git指令來操作這兩個區塊

有了這三個區塊
就可以管理檔案之間版本上的不同了

在下一關卡中會介紹這三個區塊管理版本的流程
並且嘗試透過Git來實現上一關卡的情景

接下來，我們再來練習使用”git init”指令來創建新的倉庫
這次請注意在正確的位置建立倉庫

（已更新檔案管理內容）